{"version":3,"sources":["../../src/controllers/location.js"],"names":["Location","Models","LocationController","getLocation","_req","res","find","locations","status","json","message","getOneLocation","search","params","searchObject","_id","name","RegExp","findOne","location","addLocation","req","body","description","save","data","updateLocation","id","findByIdAndUpdate","identity","runValidators","deleteLocation","findOneAndDelete"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;IAEQA,Q,GAAaC,kB,CAAbD,Q;AAER,IAAME,kBAAkB,GAAG;AACzBC,EAAAA,WAAW;AAAA;AAAA;AAAA,iCAAE,iBAAOC,IAAP,EAAaC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACaL,QAAQ,CAACM,IAAT,EADb;;AAAA;AACLC,cAAAA,SADK;AAEXF,cAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEF,gBAAAA,SAAS,EAATA,SAAF;AAAaG,gBAAAA,OAAO,EAAE;AAAtB,eAArB;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADc;AAKzBC,EAAAA,cAAc;AAAA;AAAA;AAAA,iCAAE,wBAA+BN,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmBO,cAAAA,MAAnB,QAASC,MAAT,CAAmBD,MAAnB;AACRE,cAAAA,YADQ,GACO,2BAAUF,MAAV,IAAoB;AAAEG,gBAAAA,GAAG,EAAEH;AAAP,eAApB,GAAsC;AAAEI,gBAAAA,IAAI,EAAE,IAAIC,MAAJ,CAAWL,MAAX,EAAmB,GAAnB;AAAR,eAD7C;AAAA;AAAA,qBAESZ,QAAQ,CAACkB,OAAT,CAAiBJ,YAAjB,CAFT;;AAAA;AAERK,cAAAA,QAFQ;;AAAA,oBAGVA,QAAQ,KAAK,IAHH;AAAA;AAAA;AAAA;;AAAA,gDAGkBd,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,gBAAAA,OAAO,EAAE;AAAX,eAArB,CAHlB;;AAAA;AAAA,gDAIPL,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEU,gBAAAA,QAAQ,EAARA,QAAF;AAAYT,gBAAAA,OAAO,EAAE;AAArB,eAArB,CAJO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KALW;AAWzBU,EAAAA,WAAW;AAAA;AAAA;AAAA,iCAAE,kBAAOC,GAAP,EAAYhB,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0BACmBgB,GAAG,CAACC,IADvB,EACHN,IADG,aACHA,IADG,EACGO,WADH,aACGA,WADH;AAAA;AAAA;AAAA,qBAGU,IAAIvB,QAAJ,CAAa;AAAEgB,gBAAAA,IAAI,EAAJA,IAAF;AAAQO,gBAAAA,WAAW,EAAXA;AAAR,eAAb,EAAoCC,IAApC,EAHV;;AAAA;AAGHC,cAAAA,IAHG;AAAA,gDAIFpB,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEU,gBAAAA,QAAQ,EAAEM,IAAZ;AAAkBf,gBAAAA,OAAO,EAAE;AAA3B,eAArB,CAJE;;AAAA;AAAA;AAAA;AAMHA,cAAAA,OANG,GAMO,4CANP;AAAA,gDAOFL,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,gBAAAA,OAAO,EAAPA;AAAF,eAArB,CAPE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAXc;AAqBzBgB,EAAAA,cAAc;AAAA;AAAA;AAAA,iCAAE,kBAAOL,GAAP,EAAYhB,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACIsB,cAAAA,EADJ,GAC0CN,GAD1C,CACNR,MADM,CACIc,EADJ,eAC0CN,GAD1C,CACUC,IADV,EACkBN,IADlB,cACkBA,IADlB,EACwBO,WADxB,cACwBA,WADxB;AAAA;AAAA;AAAA,qBAGWvB,QAAQ,CAAC4B,iBAAT,CACrBD,EADqB,EACjB,oBAAO;AAAEX,gBAAAA,IAAI,EAAJA,IAAF;AAAQO,gBAAAA,WAAW,EAAXA;AAAR,eAAP,EAA8BM,gBAA9B,CADiB,EACwB;AAAE,uBAAK,IAAP;AAAaC,gBAAAA,aAAa,EAAE;AAA5B,eADxB,CAHX;;AAAA;AAGNX,cAAAA,QAHM;;AAAA,oBAMRA,QAAQ,KAAK,IANL;AAAA;AAAA;AAAA;;AAAA,gDAMoBd,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,gBAAAA,OAAO,EAAE;AAAX,eAArB,CANpB;;AAAA;AAAA,gDAOLL,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEU,gBAAAA,QAAQ,EAARA,QAAF;AAAYT,gBAAAA,OAAO,EAAE;AAArB,eAArB,CAPK;;AAAA;AAAA;AAAA;AASNA,cAAAA,OATM,GASI,4CATJ;AAAA,gDAULL,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,gBAAAA,OAAO,EAAPA;AAAF,eAArB,CAVK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KArBW;AAkCzBqB,EAAAA,cAAc;AAAA;AAAA;AAAA,iCAAE,kBAAOV,GAAP,EAAYhB,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACNsB,cAAAA,EADM,GACCN,GAAG,CAACR,MADL,CACNc,EADM;AAAA;AAAA;AAAA,qBAGW3B,QAAQ,CAACgC,gBAAT,CAA0B;AAAEjB,gBAAAA,GAAG,EAAEY;AAAP,eAA1B,CAHX;;AAAA;AAGNR,cAAAA,QAHM;;AAAA,oBAIRA,QAAQ,KAAK,IAJL;AAAA;AAAA;AAAA;;AAAA,gDAIoBd,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,gBAAAA,OAAO,EAAE;AAAX,eAArB,CAJpB;;AAAA;AAAA,gDAKLL,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEU,gBAAAA,QAAQ,EAARA,QAAF;AAAYT,gBAAAA,OAAO,EAAE;AAArB,eAArB,CALK;;AAAA;AAAA;AAAA;AAONA,cAAAA,OAPM,GAOI,4CAPJ;AAAA,gDAQLL,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,gBAAAA,OAAO,EAAPA;AAAF,eAArB,CARK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAlCW,CAA3B;eA+CeR,kB","sourcesContent":["import { pickBy, identity } from 'lodash';\nimport Models from '../models';\nimport ErrorHandling from '../utils/error-handling';\nimport { isMongoId } from '../utils/validation';\n\nconst { Location } = Models;\n\nconst LocationController = {\n  getLocation: async (_req, res) => {\n    const locations = await Location.find();\n    res.status(200).json({ locations, message: 'All locations' });\n  },\n  getOneLocation: async ({ params: { search } }, res) => {\n    const searchObject = isMongoId(search) ? { _id: search } : { name: new RegExp(search, 'i') };\n    const location = await Location.findOne(searchObject);\n    if (location === null) { return res.status(404).json({ message: 'Location does not exist' }); }\n    return res.status(200).json({ location, message: 'Location found' });\n  },\n  addLocation: async (req, res) => {\n    const { name, description } = req.body;\n    try {\n      const data = await new Location({ name, description }).save();\n      return res.status(201).json({ location: data, message: 'New location created' });\n    } catch (error) {\n      const message = ErrorHandling(error);\n      return res.status(500).json({ message });\n    }\n  },\n  updateLocation: async (req, res) => {\n    const { params: { id }, body: { name, description } } = req;\n    try {\n      const location = await Location.findByIdAndUpdate(\n        id, pickBy({ name, description }, identity), { new: true, runValidators: true },\n      );\n      if (location === null) { return res.status(404).json({ message: 'Location does not exist' }); }\n      return res.status(200).json({ location, message: 'Location updated' });\n    } catch (error) {\n      const message = ErrorHandling(error);\n      return res.status(500).json({ message });\n    }\n  },\n  deleteLocation: async (req, res) => {\n    const { id } = req.params;\n    try {\n      const location = await Location.findOneAndDelete({ _id: id });\n      if (location === null) { return res.status(404).json({ message: 'Location does not exist' }); }\n      return res.status(200).json({ location, message: 'Location deleted' });\n    } catch (error) {\n      const message = ErrorHandling(error);\n      return res.status(500).json({ message });\n    }\n  },\n};\n\nexport default LocationController;\n"],"file":"location.js"}