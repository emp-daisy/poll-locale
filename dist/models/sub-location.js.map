{"version":3,"sources":["../../src/models/sub-location.js"],"names":["transformingReturn","ret","transformObj","__v","id","_id","toString","SubLocationSchema","mongoose","Schema","name","type","String","required","maleCount","Number","femaleCount","locationId","Types","ObjectId","ref","toJSON","virtuals","getters","transform","_doc","toObject","index","unique","path","validate","value","models","Location","countDocuments","locationCount","SubLocation","model"],"mappings":";;;;;;;;;;;;;AAEA;;AAFA;;AACA;AAGA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,GAAD,EAAS;AAClC,MAAMC,YAAY,GAAGD,GAArB;AACA,SAAOC,YAAY,CAACC,GAApB;AACAD,EAAAA,YAAY,CAACE,EAAb,GAAkBF,YAAY,CAACG,GAAb,CAAiBC,QAAjB,EAAlB;AACA,SAAOJ,YAAY,CAACG,GAApB;AACA,SAAOH,YAAP;AACD,CAND;;AAQA,IAAMK,iBAAiB,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AAC5CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,kBAAP;AAFN,GADsC;AAK5CC,EAAAA,SAAS,EAAE;AACTH,IAAAA,IAAI,EAAEI,MADG;AAETF,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,wBAAP;AAFD,GALiC;AAS5CG,EAAAA,WAAW,EAAE;AACXL,IAAAA,IAAI,EAAEI,MADK;AAEXF,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,0BAAP;AAFC,GAT+B;AAa5CI,EAAAA,UAAU,EAAE;AACVN,IAAAA,IAAI,EAAEH,qBAASU,KAAT,CAAeC,QADX;AAEVC,IAAAA,GAAG,EAAE,UAFK;AAGVP,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,yBAAP;AAHA;AAbgC,CAApB,EAkBvB;AACDQ,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,IADJ;AAENC,IAAAA,OAAO,EAAE,IAFH;AAGNC,IAAAA,SAAS,EAAE,mBAACC,IAAD,EAAOxB,GAAP;AAAA,aAAeD,kBAAkB,CAACC,GAAD,CAAjC;AAAA;AAHL,GADP;AAMDyB,EAAAA,QAAQ,EAAE;AACRJ,IAAAA,QAAQ,EAAE,IADF;AAERC,IAAAA,OAAO,EAAE,IAFD;AAGRC,IAAAA,SAAS,EAAE,mBAACC,IAAD,EAAOxB,GAAP;AAAA,aAAeD,kBAAkB,CAACC,GAAD,CAAjC;AAAA;AAHH;AANT,CAlBuB,CAA1B;AA+BAM,iBAAiB,CAACoB,KAAlB,CAAwB;AAAE,UAAQ,CAAV;AAAa,gBAAc;AAA3B,CAAxB,EAAwD;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAxD;AAEArB,iBAAiB,CAACsB,IAAlB,CAAuB,YAAvB,EAAqCC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA8C,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAChBvB,qBAASwB,MAAT,CAAgBC,QAAhB,CAAyBC,cAAzB,CAAwC;AAAE7B,cAAAA,GAAG,EAAE0B;AAAP,aAAxC,CADgB;;AAAA;AACtCI,YAAAA,aADsC;AAAA,6CAErCA,aAFqC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9C;;AAAA;AAAA;AAAA;AAAA,KAGG,mCAHH;;AAKA,IAAMC,WAAW,GAAG5B,qBAAS6B,KAAT,CAAe,aAAf,EAA8B9B,iBAA9B,CAApB;;eAEe6B,W","sourcesContent":["/* eslint-disable no-underscore-dangle */\n/* eslint-disable quote-props */\nimport mongoose from 'mongoose';\n\nconst transformingReturn = (ret) => {\n  const transformObj = ret;\n  delete transformObj.__v;\n  transformObj.id = transformObj._id.toString();\n  delete transformObj._id;\n  return transformObj;\n};\n\nconst SubLocationSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, 'Name is required'],\n  },\n  maleCount: {\n    type: Number,\n    required: [true, 'Male count is required'],\n  },\n  femaleCount: {\n    type: Number,\n    required: [true, 'Female count is required'],\n  },\n  locationId: {\n    type: mongoose.Types.ObjectId,\n    ref: 'Location',\n    required: [true, 'Location ID is required'],\n  },\n}, {\n  toJSON: {\n    virtuals: true,\n    getters: true,\n    transform: (_doc, ret) => transformingReturn(ret),\n  },\n  toObject: {\n    virtuals: true,\n    getters: true,\n    transform: (_doc, ret) => transformingReturn(ret),\n  },\n});\n\nSubLocationSchema.index({ 'name': 1, 'locationId': 1 }, { unique: true });\n\nSubLocationSchema.path('locationId').validate(async (value) => {\n  const locationCount = await mongoose.models.Location.countDocuments({ _id: value });\n  return locationCount;\n}, 'Location with ID does not exists!');\n\nconst SubLocation = mongoose.model('SubLocation', SubLocationSchema);\n\nexport default SubLocation;\n"],"file":"sub-location.js"}