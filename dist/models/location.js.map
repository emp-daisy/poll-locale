{"version":3,"sources":["../../src/models/location.js"],"names":["transformingReturn","ret","transformObj","__v","id","_id","toString","subLocations","maleCount","reduce","sum","femaleCount","totalCount","LocationSchema","mongoose","Schema","name","type","String","required","unique","description","toJSON","virtuals","getters","transform","_doc","toObject","path","validate","value","models","Location","countDocuments","nameCount","pre","find","populate","findOne","post","location","next","SubLocation","deleteMany","locationId","virtual","ref","localField","foreignField","justOne","model"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport mongoose from 'mongoose';\n\nconst transformingReturn = (ret) => {\n  const transformObj = ret;\n  delete transformObj.__v;\n  transformObj.id = transformObj._id.toString();\n  delete transformObj._id;\n  if (transformObj.subLocations) {\n    transformObj.maleCount = transformObj.subLocations\n      .reduce((sum, { maleCount }) => sum + maleCount, 0);\n    transformObj.femaleCount = transformObj.subLocations\n      .reduce((sum, { femaleCount }) => sum + femaleCount, 0);\n    transformObj.totalCount = transformObj.maleCount + transformObj.femaleCount;\n  }\n  return transformObj;\n};\n\nconst LocationSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: [true, 'Name is required'],\n    unique: true,\n  },\n  description: {\n    type: String,\n  },\n}, {\n  toJSON: {\n    virtuals: true,\n    getters: true,\n    transform: (_doc, ret) => transformingReturn(ret),\n  },\n  toObject: {\n    virtuals: true,\n    getters: true,\n    transform: (_doc, ret) => transformingReturn(ret),\n  },\n});\n\nLocationSchema.path('name').validate(async (value) => {\n  const nameCount = await mongoose.models.Location.countDocuments({ name: value });\n  return !nameCount;\n}, 'Location name already exists!');\n\nLocationSchema.pre('find', function find() {\n  this.populate('subLocations');\n});\n\nLocationSchema.pre('findOne', function findOne() {\n  this.populate('subLocations')\n    .populate('maleCount')\n    .populate('femaleCount');\n});\n\nLocationSchema.post('findOneAndDelete', async (location, next) => {\n  if (location !== null) {\n    await mongoose.models.SubLocation.deleteMany({\n      locationId: location.id,\n    });\n  }\n  next();\n});\n\n// LocationSchema.statics.getSubLocation = function getSubLocation(id, callback) {\n//   return mongoose.models.Location.findById(id, callback);\n// };\n\nLocationSchema.virtual('subLocations', {\n  ref: 'SubLocation',\n  localField: '_id',\n  foreignField: 'locationId',\n  justOne: false,\n});\n\nconst Location = mongoose.model('Location', LocationSchema);\n\nexport default Location;\n"],"file":"location.js"}