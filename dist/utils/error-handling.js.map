{"version":3,"sources":["../../src/utils/error-handling.js"],"names":["ErrorHandling","error","errors","errorName","name","code","errorArray","Object","values","errorMessage","map","field","value","path","message","push"],"mappings":";;;;;;;AAAA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA,MACvBC,MADuB,GACWD,KADX,CACvBC,MADuB;AAAA,MACTC,SADS,GACWF,KADX,CACfG,IADe;AAAA,MACEC,IADF,GACWJ,KADX,CACEI,IADF;AAE/B,MAAMC,UAAU,GAAIJ,MAAD,GAAWK,MAAM,CAACC,MAAP,CAAcN,MAAd,CAAX,GAAmC,EAAtD;AACA,MAAIO,YAAJ;;AACA,UAAQN,SAAR;AACE,SAAK,iBAAL;AACEM,MAAAA,YAAY,GAAGH,UAAU,CAACI,GAAX,CAAe,UAACC,KAAD,EAAW;AACvC,YAAIA,KAAK,CAACP,IAAN,KAAe,WAAnB,EAAgC;AAC9B,0CAAyBO,KAAK,CAACC,KAA/B,0BAAoDD,KAAK,CAACE,IAA1D;AACD;;AACD,eAAOF,KAAK,CAACG,OAAb;AACD,OALc,CAAf;AAMA;;AACF,SAAK,YAAL;AACEL,MAAAA,YAAY,GAAGH,UAAU,CAACI,GAAX,CAAe,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACG,OAAV;AAAA,OAApB,CAAf;;AACA,UAAIT,IAAI,KAAK,KAAb,EAAoB;AAAEI,QAAAA,YAAY,CAACM,IAAb,CAAkB,+BAAlB;AAAqD;;AAC3E;;AACF,SAAK,WAAL;AACEN,MAAAA,YAAY,GAAG,0BAAmBR,KAAK,CAACW,KAAzB,0BAA8CX,KAAK,CAACY,IAApD,EAAf;AACA;;AACF;AACEJ,MAAAA,YAAY,GAAG,CAAC,2BAAD,CAAf;AACA;AAlBJ;;AAoBA,SAAOA,YAAP;AACD,CAzBD;;eA2BeT,a","sourcesContent":["const ErrorHandling = (error) => {\n  const { errors, name: errorName, code } = error;\n  const errorArray = (errors) ? Object.values(errors) : [];\n  let errorMessage;\n  switch (errorName) {\n    case 'ValidationError':\n      errorMessage = errorArray.map((field) => {\n        if (field.name === 'CastError') {\n          return `Invalid value '${field.value}' passed for ${field.path}`;\n        }\n        return field.message;\n      });\n      break;\n    case 'MongoError':\n      errorMessage = errorArray.map(field => field.message);\n      if (code === 11000) { errorMessage.push('Similar entry already exists!'); }\n      break;\n    case 'CastError':\n      errorMessage = [`Invalid value '${error.value}' passed for ${error.path}`];\n      break;\n    default:\n      errorMessage = ['Error completing request!'];\n      break;\n  }\n  return errorMessage;\n};\n\nexport default ErrorHandling;\n"],"file":"error-handling.js"}